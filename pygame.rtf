{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red51\green51\blue51;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c26275\c26275\c26275;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl337\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
\'a0\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth12038\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt133 \clpadl133 \clpadb133 \clpadr133 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl337\partightenfactor0

\f1 \cf3 import pygame\uc0\u8232 import random\u8232 import sys\u8232 import asyncio\u8232 \u8232 # Config\u8232 WINDOW_SIZE = 400\u8232 CELL_SIZE = 20\u8232 FPS = 10\u8232 \u8232 # Couleurs\u8232 BLACK = (0, 0, 0)\u8232 GREEN = (0, 255, 0)\u8232 RED = (255, 0, 0)\u8232 WHITE = (255, 255, 255)\u8232 \u8232 async def main():\u8232 \'a0\'a0\'a0 pygame.init()\u8232 \'a0\'a0\'a0 screen = pygame.display.set_mode((WINDOW_SIZE, WINDOW_SIZE))\u8232 \'a0\'a0\'a0 clock = pygame.time.Clock()\u8232 \'a0\'a0\'a0 font = pygame.font.SysFont(None, 36)\'a0 # Police par d\'e9faut, taille 36\u8232 \u8232 \'a0\'a0\'a0 snake = [(100, 100)]\u8232 \'a0\'a0\'a0 snake_dir = (CELL_SIZE, 0)\u8232 \'a0\'a0\'a0 food = (random.randrange(0, WINDOW_SIZE, CELL_SIZE),\u8232 \'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0\'a0random.randrange(0, WINDOW_SIZE, CELL_SIZE))\u8232 \u8232 \'a0\'a0\'a0 score = 0\u8232 \'a0\'a0\'a0 running = True\u8232 \'a0\'a0\'a0 while running:\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 clock.tick(FPS)\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 await asyncio.sleep(0)\'a0 # N\'e9cessaire pour Pygbag\u8232 \u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 for event in pygame.event.get():\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if event.type == pygame.QUIT:\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 running = False\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 elif event.type == pygame.KEYDOWN:\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if event.key == pygame.K_UP and snake_dir != (0, CELL_SIZE):\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake_dir = (0, -CELL_SIZE)\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if event.key == pygame.K_DOWN and snake_dir != (0, -CELL_SIZE):\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake_dir = (0, CELL_SIZE)\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if event.key == pygame.K_LEFT and snake_dir != (CELL_SIZE, 0):\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake_dir = (-CELL_SIZE, 0)\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if event.key == pygame.K_RIGHT and snake_dir != (-CELL_SIZE, 0):\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake_dir = (CELL_SIZE, 0)\u8232 \u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 # D\'e9placement du serpent\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 new_head = (snake[0][0] + snake_dir[0], snake[0][1] + snake_dir[1])\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake.insert(0, new_head)\u8232 \u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 # Collision avec nourriture\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 if snake[0] == food:\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 score += 1\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 food = (random.randrange(0, WINDOW_SIZE, CELL_SIZE),\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 random.randrange(0, WINDOW_SIZE, CELL_SIZE))\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 else:\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake.pop()\u8232 \u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 # Collision avec murs ou soi-m\'eame\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 if (snake[0][0] < 0 or snake[0][0] >= WINDOW_SIZE or\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake[0][1] < 0 or snake[0][1] >= WINDOW_SIZE or\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 snake[0] in snake[1:]):\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 running = False\u8232 \u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 # Affichage\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 screen.fill(BLACK)\u8232 \'a0\'a0 \'a0\'a0\'a0\'a0\'a0for pos in snake:\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pygame.draw.rect(screen, GREEN, (pos[0], pos[1], CELL_SIZE, CELL_SIZE))\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 pygame.draw.rect(screen, RED, (food[0], food[1], CELL_SIZE, CELL_SIZE))\u8232 \u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 # Affichage du score\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 score_text = font.render(f"Score: \{score\}", True, WHITE)\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 screen.blit(score_text, (10, 10))\u8232 \u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 pygame.display.flip()\u8232 \u8232 \'a0\'a0\'a0 # Affiche le score final\u8232 \'a0\'a0\'a0 screen.fill(BLACK)\u8232 \'a0\'a0\'a0 msg = font.render(f"Game Over! Final Score: \{score\}", True, WHITE)\u8232 \'a0\'a0\'a0 screen.blit(msg, (WINDOW_SIZE // 2 - msg.get_width() // 2,\u8232 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 WINDOW_SIZE // 2 - msg.get_height() // 2))\u8232 \'a0\'a0\'a0 pygame.display.flip()\u8232 \'a0\'a0\'a0 await asyncio.sleep(2)\'a0 # Laisse le message affich\'e9 2 secondes\u8232 \u8232 \'a0\'a0\'a0 pygame.quit()\u8232 \'a0\'a0\'a0 sys.exit()\u8232 \u8232 asyncio.run(main())
\f0 \cf2 \cell \lastrow\row
\pard\pardeftab720\sl337\partightenfactor0
\cf3 \'a0\cf2 \
}